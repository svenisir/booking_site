version: '3.7'
services:
  db:
    image: postgres:15
    container_name: booking_db
    env_file:
      - .env-non-dev
    ports:
      - 5432:5432

  redis:
    image: redis:7
    container_name: booking_redis
    ports:
      - 6379:6379

  booking:
    image: booking_image
    build:
      context: .
    container_name: booking_app
    env_file:
      - .env-non-dev
    depends_on:
      - db
      - redis
    command: ["/booking/docker/app.sh"]
    ports:
      - 8080:8000

  celery:
    build:
      context: .
    container_name: booking_celery
    command: sh -c "celery --app=app.tasks.celery_app:celery worker -l INFO"
    env_file:
      - .env-non-dev
    depends_on:
      - redis

  flower:
    build:
      context: .
    container_name: booking_flower
    command: sh -c "celery --app=app.tasks.celery_app:celery flower"
    env_file:
      - .env-non-dev
    depends_on:
      - redis

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafanadata:/var/lib/grafana
    restart: unless-stopped
    ports:
      - 3000:3000

  volumes:
    postgresdata:
    grafanadata:
    prometheusdata: